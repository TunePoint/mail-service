plugins {
    id 'org.springframework.boot'
    id 'java-library'
    id 'com.google.cloud.tools.jib'
}

dependencies {
    implementation project(':mail-model')

    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'javax.mail:mail'
    implementation 'org.freemarker:freemarker'

    implementation 'org.mapstruct:mapstruct'

    implementation 'ua.tunepoint:commons-web-exception'
    implementation 'ua.tunepoint:commons-web-model'

    compileOnly 'org.projectlombok:lombok'
    compileOnly 'org.mapstruct:mapstruct-processor'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor'
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    archiveName "${project.name}.jar"
}

jib {
    from {
        image dockerImage
    }

    to {
        image "docker.io/tunepoint/${project.name}:${project.version}"

        auth {
            username System.getenv('DOCKER_USERNAME') ?: 'default'
            password System.getenv('DOCKER_PASSWORD') ?: 'default'
        }
    }
}
